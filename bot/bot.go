package bot

import (
	"fmt"
	"log"
	"os"
	"os/signal"
	"strconv"
	"strings"

	"github.com/TeamOfAnts/discord-shuffle-bot/internal/teams"
	"github.com/bwmarrin/discordgo"
	"github.com/joho/godotenv"
)

func Run() {
	err := godotenv.Load(".env")

	if err != nil {
		log.Fatal("Error loading .env file")
	}

	token := os.Getenv("TOKEN")

	discord, err := discordgo.New("Bot " + token)
	if err != nil {
		log.Fatal("ÏÑ∏ÏÖò ÏÉùÏÑ± Ïò§Î•ò:", err)
	}

	discord.AddHandler(messageCreate)

	// open session
	discord.Open()
	defer discord.Close() // close session, after function termination

	// keep bot running untill there is NO os interruption (ctrl + C)
	fmt.Println("Bot running....")
	c := make(chan os.Signal, 1)
	signal.Notify(c, os.Interrupt)
	<-c
}
func messageCreate(discord *discordgo.Session, message *discordgo.MessageCreate) {

	/* prevent bot responding to its own message
	this is achived by looking into the message author id
	if message.author.id is same as bot.author.id then just return
	*/
	if message.Author.ID == discord.State.User.ID {
		return
	}

	// respond to user message if it contains `!help` or `!bye`
	switch {
	case strings.HasPrefix(message.Content, "!ping"):
		discord.ChannelMessageSend(message.ChannelID, "pongüèì")
	case strings.HasPrefix(message.Content, "!members"), strings.HasPrefix(message.Content, "!Î©§Î≤Ñ"):
		teams, err := teams.GetTeams()
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, "Î©§Î≤ÑÍ∞Ä ÏóÜÏäµÎãàÎã§.")
			return
		}
		team := teams[0]

		if len(team.Members) == 0 {
			discord.ChannelMessageSend(message.ChannelID, "Î©§Î≤ÑÍ∞Ä ÏóÜÏäµÎãàÎã§.")
			return
		}
		discord.ChannelMessageSend(message.ChannelID, fmt.Sprintf("ÌòÑÏû¨ Î©§Î≤Ñ: %s\n Ï¥ù Ïù∏Ïõê:%d", strings.Join(team.Members, ", "), len(team.Members)))
	case strings.HasPrefix(message.Content, "!add"), strings.HasPrefix(message.Content, "!Ï∂îÍ∞Ä"):
		replacer := strings.NewReplacer(
			"!add", "",
			"!Ï∂îÍ∞Ä", "",
		)
		n := replacer.Replace(message.Content)
		names := strings.Split(n, ",")
		formattedNames := make([]string, 0)
		for _, name := range names {
			formattedName := strings.TrimSpace(name)
			if len(formattedName) == 0 {
				continue
			}

			formattedNames = append(formattedNames, formattedName)
		}
		newMembers, err := teams.AddMember(formattedNames)
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, "Î©§Î≤Ñ Ï∂îÍ∞Ä Ïã§Ìå®")
			return
		}
		discord.ChannelMessageSend(message.ChannelID, fmt.Sprintf("Î©§Î≤Ñ Ï∂îÍ∞Ä ÏôÑÎ£å\n ÌòÑÏû¨ Î©§Î≤Ñ: %s\n Ï¥ù Ïù∏Ïõê:%d", strings.Join(newMembers, ", "), len(newMembers)))
	case strings.HasPrefix(message.Content, "!ÌåÄÌÅ¨Í∏∞"), strings.HasPrefix(message.Content, "!teamSize"):
		replacer := strings.NewReplacer(
			"!teamSize", "",
			"!ÌåÄÌÅ¨Í∏∞", "",
		)
		size := strings.TrimSpace(replacer.Replace(message.Content))
		if len(size) == 0 {
			teams, err := teams.GetTeams()
			if err != nil {
				discord.ChannelMessageSend(message.ChannelID, "ÌåÄÏù¥ ÏóÜÏäµÎãàÎã§.")
				return
			}
			discord.ChannelMessageSend(message.ChannelID, fmt.Sprintf("ÌòÑÏû¨ ÌåÄ ÏÇ¨Ïù¥Ï¶àÎäî %dÎ™Ö ÏûÖÎãàÎã§.", teams[0].Size))
			return
		}
		s, err := strconv.Atoi(size)
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, "Ïà´ÏûêÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.")
			return
		}
		teamSize, err := teams.UpdateSize(s)
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, "ÌåÄ ÏÇ¨Ïù¥Ï¶à Î≥ÄÍ≤Ω Ïã§Ìå®")
			return
		}
		discord.ChannelMessageSend(message.ChannelID, fmt.Sprintf("ÌåÄ ÏÇ¨Ïù¥Ï¶àÍ∞Ä %dÎ™ÖÏúºÎ°ú Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§.", teamSize))
	case strings.HasPrefix(message.Content, "!shuffledTeams"), strings.HasPrefix(message.Content, "!ÌòÑÏû¨Ï°∞"):
		shuffledTeams, err := teams.GetShuffledTeams()
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, err.Error())
			return
		}
		discord.ChannelMessageSend(message.ChannelID, shuffledTeams)
	case strings.HasPrefix(message.Content, "!shuffle"):
		teams, err := teams.Shuffle()
		if err != nil {
			discord.ChannelMessageSend(message.ChannelID, fmt.Sprintf("ÌåÄ ÎÇòÎàÑÍ∏∞ Ïã§Ìå®. %s", err))
			return
		}
		discord.ChannelMessageSend(message.ChannelID, teams)
	case strings.HasPrefix(message.Content, "!help"):
		discord.ChannelMessageSend(message.ChannelID, "Î™ÖÎ†πÏñ¥ Î™©Î°ù\n- Î©§Î≤Ñ Ï∂îÍ∞Ä. Íµ¨Î∂ÑÏûêÎäî `,`\n  - !add [Ïù¥Î¶Ñ]\n  - !Ï∂îÍ∞Ä [Ïù¥Î¶Ñ]\n- Î©§Î≤Ñ Î™©Î°ù\n  - !members\n  - !Î©§Î≤Ñ\n- ÌåÄÎãπ Ïù∏ÏõêÏàò ÌôïÏù∏\n  - !teamSize\n  - !ÌåÄÌÅ¨Í∏∞\n- ÌåÄÎãπ Ïù∏ÏõêÏàò Î≥ÄÍ≤Ω\n  - !teamSize [Ïà´Ïûê]\n  - !ÌåÄÌÅ¨Í∏∞ [Ïà´Ïûê]\n- ÌåÄ ÎÇòÎàÑÍ∏∞\n  - !shuffle\n- ÎèÑÏõÄÎßê\n  - !help\n- ÌòÑÏû¨ Ï°∞ ÌôïÏù∏\n  - !ÌòÑÏû¨Ï°∞\n  - !shuffledTeams")
	}
}
